// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Users {
  id         Int         @id @default(autoincrement())
  username   String      @unique @db.VarChar(255)
  created_at DateTime    @default(now())
  Tags       Tags[]
  Tasks      Tasks[]
  TodoLists  TodoLists[]
}

model Tags {
  id      Int     @id @default(autoincrement())
  user_id Int
  name    String  @db.VarChar(255)
  owner   Users   @relation(fields: [user_id], references: [id])
  tasks   Tasks[]

  @@unique([user_id, name])
}

model Tasks {
  id        Int                @id @default(autoincrement())
  user_id   Int
  name      String             @db.VarChar(255)
  owner     Users              @relation(fields: [user_id], references: [id])
  Tags      Tags[]
  TodoLists TasksOnTodoLists[]

  @@unique([user_id, name])
}

model TodoLists {
  id      Int                @id @default(autoincrement())
  user_id Int
  name    String             @db.VarChar(255)
  owner   Users              @relation(fields: [user_id], references: [id])
  Tasks   TasksOnTodoLists[]
}

model TasksOnTodoLists {
  Task        Tasks     @relation(fields: [task_id], references: [id])
  task_id     Int
  TodoList    TodoLists @relation(fields: [todolist_id], references: [id])
  todolist_id Int
  completed   Boolean

  @@id([task_id, todolist_id])
}
